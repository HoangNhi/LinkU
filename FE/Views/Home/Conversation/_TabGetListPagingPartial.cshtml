@model MODELS.BASE.GetListPagingResponse
@{
    var data = Model.Data as List<MODELS.CONVERSATION.Dtos.MODELConversationGetListPaging>;
}

<style>
    #pills-list-message > button.active {
        --mdb-btn-active-bg: var(--mdb-gray-300);
        pointer-events: none
    }

    #pills-list-message .row > *{
        padding-left: 0;
        padding-right: 0;
    }
</style>

@if (data.Count == 0)
{
    <div>Không tìm thấy tin nhắn</div>
}
else
{
    foreach (var item in data)
    {
        <button id="@item.TargetId"
                type="button"
                class="d-flex w-100 btn btn-link p-2 mb-2"
                style="text-align: start; align-items: center; color: inherit; height: 64px"
                data-mdb-ripple-init
                data-mdb-ripple-color="dark"
                onclick="transToChatScreen('@item.TargetId');
                         @(item.IsRead ? "" : $"updateConversationLatestMessage('{item.TargetId}')")">
            <img class="rounded-circle me-2 flex-shrink-0"
                 style="object-fit: cover; box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px, rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;"
                 width="48" height="48"
                 src='@(item.TargetPicture)' />
            <div class="container" style="width: calc(100% - 48px - .5rem)">
                @if (item.IsRead)
                {
                    <div class="row fw-normal">
                        <span class="fs-6 col-9 text-truncate text-black" style="line-height: 1.5">@item.TargetName</span>
                        <span class="col-3 text-end align-items-center">@ViewContext.GetTimeAgo(item.LatestMessageDate)</span>
                    </div>

                    <div class="row fw-normal">
                        <span class="mt-1 col-12 text-truncate" style="font-size: 0.75rem">
                            @($"{item.UserSendLastestMessage}: {item.LatestMessage}" )
                        </span>
                    </div>
                }
                else
                {
                    <div class="row">
                        <span class="fs-6 col-9 text-truncate text-black" style="line-height: 1.5">@item.TargetName</span>
                        <span class="col-3 text-end align-items-center">@ViewContext.GetTimeAgo(item.LatestMessageDate)</span>
                    </div>

                    <div class="row">
                        <span class="mt-1 col-11 text-truncate" style="font-size: 0.75rem">
                            @($"{item.UserSendLastestMessage}: {item.LatestMessage}" )
                        </span>
                        <div class="col position-relative">
                            <div class="position-absolute rounded-circle"
                                 style="top: 50%; left: 50%; -ms-transform: translate(-50%, -50%);
                                        transform: translate(-50%, -50%); background-color: #C62828;
                                        @(item.UnreadCount switch 
                                        {
                                            1 => "padding: 0.25rem",
                                            var count when count > 1 && count < 9 => "padding: 0.5rem",
                                            var count when count > 9 && count <= 99 => "padding: 0.6rem",
                                            var count when count > 99 => "padding: 0.75rem; width: 30px; border-radius: var(--mdb-border-radius-pill)!important",
                                            _ => ""
                                        })"></div>
                            <span class="position-absolute text-white"
                                  style="top: 50%; left: 50%; -ms-transform: translate(-50%, -50%); transform: translate(-50%, -50%);">
                                @(item.UnreadCount switch
                                {
                                    1 => "",
                                    var count when count > 1 && count <= 99 => count,
                                    var count when count > 99 => "99+",
                                    _ => ""
                                })
                            </span>
                        </div>
                    </div>
                }
            </div>
        </button>
    }
}

<script>
    function setActiveButton(id) {
        if (id !== '') {
            // Xóa class 'active' khỏi tất cả các button
            document.querySelectorAll('#pills-list-message>button.active').forEach(btn => {
                btn.classList.remove('active');
            });

            // Thêm class 'active' vào button được click
            var button = $('#pills-list-message>#' + id);
            button.addClass('active')
        }
    }
</script>
